#cloud-config
# Cloud-Init Hints:
# * Some default settings are in /etc/cloud/cloud.cfg
# * Some examples at: http://bazaar.launchpad.net/~cloud-init-dev/cloud-init/trunk/files/head:/doc/examples/
# * CloudInit Module sourcecode at: http://bazaar.launchpad.net/~cloud-init-dev/cloud-init/trunk/files/head:/cloudinit/config/
# * Example: http://www.knowceantech.com/2014/03/amazon-cloud-bootstrap-with-userdata-cloudinit-github-puppet/

apt_sources:
 # Enable NodeJS repos (for latest version of NodeJS)
 - source: deb http://ppa.launchpad.net/chris-lea/node.js/ubuntu $RELEASE main
   keyid: C7917B12
   filename: nodejs.list
 - source: deb-src http://ppa.launchpad.net/chris-lea/node.js/ubuntu $RELEASE main
   keyid: C7917B12
   filename: nodejs.list

apt_update: true # Run 'apt-get update' on first boot
apt_upgrade: false # Run 'apt-get upgrade' on first boot
apt_reboot_if_required: false # Reboot after package install/upgrade if needed (e.g. if kernel update)

# Install additional packages on first boot
packages:
 - nodejs
 - postgresql
 - python-setuptools  # required for CloudFormation Helper Scripts

runcmd:
 - easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
 - sudo -u postgres psql -c "CREATE ROLE nodeappuser WITH LOGIN PASSWORD 'password';"
 - sudo -u postgres createdb nodeappdb
 - sudo -u postgres psql -c "GRANT ALL ON DATABASE nodeappdb TO nodeappuser;"

locale: en_US.UTF-8
timezone: UTC
output: {all: ">> /var/log/cloud-init-output.log"}  # Log all cloud-init process output (info & errors) to a logfile
final_message: "System boot (via cloud-init) is COMPLETE, after $UPTIME seconds. Finished at $TIMESTAMP"  # final_message written to log when cloud-init processes are finished
